#!/bin/sh
#
# $Id$/
# 
# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 42):
# <bonelli@antifork.org> wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return. Nicola Bonelli
# ----------------------------------------------------------------------------


echo -e "#ifndef _ERRCODE_H_\n#define _ERRCODE_H_\n"
echo -e "#include <errno.h>\n#include <stdexcept>\n"
echo -e "namespace more { namespace { \n"
echo -e "    // This header has been automatically generated by errocode.sh.";
echo -e "    //\n";
echo -e "    template <int E> struct errcode { static const char * value; };"
echo -e "    template <int E> const char *errcode<E>::value = \"UNKNOWN\";\n"

echo "#include <errno.h>" | gcc -E -dM - | grep -E "#define E.*[0-9].*" | sort -u -n -k 3 | 
        awk '{printf "    template <> struct errcode<%s> { static const char * value; };\n    const char *errcode<%s>::value = \"%s\";\n", $2, $2, $2}'

echo -e "\n    const char * errcode_str[] = {"

i=0
while [ $i -le "132" ]
do
        echo "        errcode<$i>::value,"
        i=$(($i+1))
done        

echo -e "    };"    

echo -e "    } // unammed namespace\n"
echo -e "    // threadsafe pretty_strerror"
echo -e "    //\n"
echo -e "    static inline"
echo -e "    const char *"
echo -e "    strerrcode(int num)"
echo -e "    {"
echo -e "        if (num < 0 || num > 132)"
echo -e "            throw std::out_of_range(\"more::strerrorcode\");"
echo -e "        return errcode_str[num];"
echo -e "    }"

echo -e "\n\n} // namespace more\n\n#endif /* _ERRCODE_H_ */"
